[{"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/index.js":"1","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/App.js":"2","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/reportWebVitals.js":"3","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/HooksSample.js":"4","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/PortalDemo.js":"5","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/ProfilerDemo.js":"6","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserCreate.js":"7","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserRead.js":"8","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserDelete.js":"9"},{"size":500,"mtime":1639018634316,"results":"10","hashOfConfig":"11"},{"size":603,"mtime":1639119967178,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1639018634320,"results":"13","hashOfConfig":"11"},{"size":3839,"mtime":1639116610616,"results":"14","hashOfConfig":"11"},{"size":203,"mtime":1639026485568,"results":"15","hashOfConfig":"11"},{"size":433,"mtime":1639050583608,"results":"16","hashOfConfig":"11"},{"size":3216,"mtime":1639051366238,"results":"17","hashOfConfig":"11"},{"size":1651,"mtime":1639050157113,"results":"18","hashOfConfig":"11"},{"size":4805,"mtime":1639136740743,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1iogovt",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/index.js",[],["45","46"],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/App.js",["47","48","49","50","51","52"],"import logo from './logo.svg';\nimport './App.css';\nimport HooksSample from './HooksSample';\nimport PortalDemo from './PortalDemo';\nimport ProfilerDemo from './ProfilerDemo';\nimport UserCreate from './UserCreate';\nimport UserRead from './UserRead';\nimport UserDelete from './UserDelete';\n\nfunction App() {\n  const onClickHandler = () =>{\n    console.log(\"Clicked\");\n  }\n  return (\n    <div className=\"App\" onClick={onClickHandler}>\n     {/* <HooksSample/> */}\n     {/* <PortalDemo/>\n     <ProfilerDemo/> */}\n     {/* <UserCreate/> */}\n     <UserDelete/>\n     \n         </div>\n  );\n}\n\nexport default App;\n","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/reportWebVitals.js",[],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/HooksSample.js",["53"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport default () => {\n  const [postsList, setPostsList] = useState([]);\n\n  const [title, setTitle] = useState(\"\");\n\n  const [body, setBody] = useState(\"\");\n\n  const [postId, setPostId] = useState(0);\n\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    //code to fetch data from server\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => {\n      console.log(response.data);\n      if (response && response.data) {\n        setPostsList(response.data);\n      }\n    });\n  };\n\n  const onTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const onBodyChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(title, body);\n    if (!isEditMode) {\n      //code to add new records\n      axios\n        .post(\"https://jsonplaceholder.typicode.com/posts\", {\n          title,\n          body,\n          userId: 1,\n        })\n        .then((response) => {\n          console.log(response);\n          alert(\"Added...!\");\n          //fetch the data again\n          fetchData(\"\");\n          //reset from\n          setTitle(\"\");\n          setBody(\"\");\n        });\n    } else {\n      //code to edit the records\n      if (postId > 0) {\n        axios\n          .put(\"https://jsonplaceholder.typicode.com/posts/\" + postId, {\n            id: postId,\n            title,\n            body,\n            postId: 1,\n          })\n          .then((response) => {\n            if (response) {\n              fetchData();\n              alert(\"Updated...!\");\n              onResetClickHandler();\n            }\n          });\n      }\n    }\n  };\n\n  const onDeleteClickHandler = (id) => {\n    axios\n      .delete(\"https://jsonplaceholder.typicode.com/posts/\" + id)\n      .then((response) => {\n        alert(\"Deleted...!\");\n        fetchData(\"\");\n      });\n  };\n\n  const onEditClickHandler = (postObject) => {\n    console.log(postObject);\n    setIsEditMode(true);\n    setTitle(postObject.title);\n    setBody(postObject.body);\n    setPostId(postObject.id);\n  };\n\n  const onResetClickHandler = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    setIsEditMode(false);\n    setTitle(\"\");\n    setBody(\"\");\n  };\n\n  return (\n    <>\n      <h1>From HooksSample</h1>\n      <h2>Post Form</h2>\n      <form onSubmit={onFormSubmit}>\n        <label>Title:</label>\n        <input name=\"title\" value={title} onChange={onTitleChange} />\n        <label>Body:</label>\n        <input name=\"body\" value={body} onChange={onBodyChange} />\n        <br />\n        <button type=\"submit\">{isEditMode ? \"Update\" : \"Submit\"}</button>\n        {isEditMode && <button onClick={onResetClickHandler}>Reset</button>}\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Body</th>\n          </tr>\n        </thead>\n        <tbody>\n          {postsList.map((post, index) => {\n            return (\n              <tr key={post.id}>\n                <td>{post.id}</td>\n                <td>{post.title}</td>\n                <td>{post.body}</td>\n\n                <td>\n                  <button\n                    onClick={() => {\n                      onDeleteClickHandler(post.id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n\n                <td>\n                  <button\n                    onClick={() => {\n                      onEditClickHandler(post);\n                    }}\n                  >\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/PortalDemo.js",["54","55"],"import reactDom from \"react-dom\";       \n\nexport default () => {\n    //return <h1>In PortalDemo</h1>\n    return(<>\n    <h1> In Portal Demo</h1>\n\n    document.getElementById(\"root-portal\")\n    </>\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/ProfilerDemo.js",["56"],"import { Profiler, useState } from \"react\"\n\nexport default ()=>{\n    const[value, setValue]= useState(\"\");\n    const onChangeHandler=(event)=>{\n        setValue(event.target.value);\n    }\n    return(\n        <>\n        <h1>in Profiler Demo</h1>\n        <Profiler id={\"inputProfiler\"} onRender={(...args)=>{console.log(args);}}>\n        <input value={value} onChange={onChangeHandler}></input>\n        </Profiler>\n        </>\n    )\n}\n","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserCreate.js",["57"],"\n  \nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] = useState([]); \n    const [name, setName] = useState(\"\");        \n    const [userName, setUserName] = useState(\"\")\n    const [email, setEmail] = useState(\"\");       \n    const [phone, setPhone] = useState(\"\");       \n\n    useEffect(()=>{\n        fetchData();\n        \n    },[]);\n    const fetchData=()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){                          //method to fetch data from server\n                setUserList(response.data)\n            }\n\n        })\n    }\n\n    const onNameChange=(event)=>{\n        setName(event.target.value);\n    }\n\n    const onUserNameChange=(event)=>{\n        setUserName(event.target.value);\n    }\n\n    const onEmailChange=(event)=>{\n        setEmail(event.target.value);\n    }\n    const onPhoneChange=(event)=>{\n        setPhone(event.target.value);\n    }\n    \n    const onSubmitClickHandler=(event)=>{     // submit activity\n        event.preventDefault();\n\n\n        console.log(name, email,phone);\n        axios.post(\"https://jsonplaceholder.typicode.com/users\", {name, email, phone, id:1,}).then((response)=>{\n            console.log(response);\n            alert(\"User Added\")\n            //fetch data\n            fetchData();\n            //reset input fields\n            setName(\"\");\n            setUserName(\"\");\n            setEmail(\"\");\n            setPhone(\"\");\n        })\n    }\n  \n\n    return(\n        <>\n        <h1>User List</h1>\n        <form onSubmit={onSubmitClickHandler}>\n            <label>Name</label>\n            <input name=\"name\" value={name} onChange={onNameChange}/>\n\n            <label>User Name</label>\n            <input name=\"UserName\" value={userName} onChange={onUserNameChange}/>\n\n            <label>Email</label>\n            <input name=\"email\" value={email} onChange={onEmailChange}/>\n\n            <label>phone</label>\n            <input name=\"phone\" value={phone} onChange={onPhoneChange}/>\n\n            <button type=\"submit\">Submit</button>\n        </form>\n        <br/>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>street</th>\n                    <th>city</th>\n                   \n                </tr>\n            </thead>\n            <tbody>\n                {userList.map((user, index)=>{       //mapping for fetched userList\n                    return(\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.address.street}</td>\n                    <td>{user.address.city}</td>\n                  \n                  </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </>\n\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserRead.js",["58"],"import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] =useState([]);\n\n    useEffect(()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){\n                setUserList(response.data)\n            }\n\n        })\n    },[])\n\n    return(\n        <>\n        <h1>User List</h1>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>street</th>\n                    <th>city</th>\n                    <th>zipcode</th>\n                    <th>website</th>\n                    <th>Company name</th>\n                </tr>\n            </thead>\n            <tbody>\n                {userList.map((user, index)=>{\n                    return(\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.address.street}</td>\n                    <td>{user.address.city}</td>\n                    <td>{user.address.zipcode}</td>\n                    <td>{user.website}</td>\n                    <td>{user.company.name}</td>\n                  </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </>\n\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserDelete.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":19},{"ruleId":"64","severity":1,"message":"69","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":18},{"ruleId":"64","severity":1,"message":"70","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":20},{"ruleId":"64","severity":1,"message":"71","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":18},{"ruleId":"64","severity":1,"message":"72","line":7,"column":8,"nodeType":"66","messageId":"67","endLine":7,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":4,"column":1,"nodeType":"75","endLine":158,"endColumn":3},{"ruleId":"64","severity":1,"message":"76","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":3,"column":1,"nodeType":"75","endLine":11,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":3,"column":1,"nodeType":"75","endLine":16,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":6,"column":1,"nodeType":"75","endLine":113,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":4,"column":1,"nodeType":"75","endLine":57,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":4,"column":1,"nodeType":"75","endLine":180,"endColumn":2},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'HooksSample' is defined but never used.","'PortalDemo' is defined but never used.","'ProfilerDemo' is defined but never used.","'UserCreate' is defined but never used.","'UserRead' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'reactDom' is defined but never used.","no-global-assign","no-unsafe-negation"]