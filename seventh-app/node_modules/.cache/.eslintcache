[{"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/index.js":"1","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/App.js":"2","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/reportWebVitals.js":"3","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/HooksSample.js":"4","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/PortalDemo.js":"5","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/ProfilerDemo.js":"6","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserCreate.js":"7","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserRead.js":"8","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserSample.js":"9"},{"size":500,"mtime":1639018634316,"results":"10","hashOfConfig":"11"},{"size":642,"mtime":1639218659567,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1639018634320,"results":"13","hashOfConfig":"11"},{"size":7003,"mtime":1639223163858,"results":"14","hashOfConfig":"11"},{"size":203,"mtime":1639026485568,"results":"15","hashOfConfig":"11"},{"size":433,"mtime":1639050583608,"results":"16","hashOfConfig":"11"},{"size":3216,"mtime":1639051366238,"results":"17","hashOfConfig":"11"},{"size":1651,"mtime":1639050157113,"results":"18","hashOfConfig":"11"},{"size":6164,"mtime":1639223337801,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1iogovt",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/index.js",[],["45","46"],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/App.js",["47","48","49","50","51","52","53"],"import logo from './logo.svg';\nimport './App.css';\nimport HooksSample from './HooksSample';\nimport PortalDemo from './PortalDemo';\nimport ProfilerDemo from './ProfilerDemo';\nimport UserCreate from './UserCreate';\nimport UserRead from './UserRead';\nimport UserDelete from './UserSample';\nimport UserSample from './UserSample';\n\nfunction App() {\n  const onClickHandler = () =>{\n    console.log(\"Clicked\");\n  }\n  return (\n    <div className=\"App\" onClick={onClickHandler}>\n     {/* <HooksSample/> */}\n     {/* <PortalDemo/>\n     <ProfilerDemo/> */}\n     {/* <UserCreate/> */}\n     <UserSample/>\n     \n         </div>\n  );\n}\n\nexport default App;\n","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/reportWebVitals.js",[],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/HooksSample.js",["54"],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/PortalDemo.js",["55","56"],"import reactDom from \"react-dom\";       \n\nexport default () => {\n    //return <h1>In PortalDemo</h1>\n    return(<>\n    <h1> In Portal Demo</h1>\n\n    document.getElementById(\"root-portal\")\n    </>\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/ProfilerDemo.js",["57"],"import { Profiler, useState } from \"react\"\n\nexport default ()=>{\n    const[value, setValue]= useState(\"\");\n    const onChangeHandler=(event)=>{\n        setValue(event.target.value);\n    }\n    return(\n        <>\n        <h1>in Profiler Demo</h1>\n        <Profiler id={\"inputProfiler\"} onRender={(...args)=>{console.log(args);}}>\n        <input value={value} onChange={onChangeHandler}></input>\n        </Profiler>\n        </>\n    )\n}\n","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserCreate.js",["58"],"\n  \nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] = useState([]); \n    const [name, setName] = useState(\"\");        \n    const [userName, setUserName] = useState(\"\")\n    const [email, setEmail] = useState(\"\");       \n    const [phone, setPhone] = useState(\"\");       \n\n    useEffect(()=>{\n        fetchData();\n        \n    },[]);\n    const fetchData=()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){                          //method to fetch data from server\n                setUserList(response.data)\n            }\n\n        })\n    }\n\n    const onNameChange=(event)=>{\n        setName(event.target.value);\n    }\n\n    const onUserNameChange=(event)=>{\n        setUserName(event.target.value);\n    }\n\n    const onEmailChange=(event)=>{\n        setEmail(event.target.value);\n    }\n    const onPhoneChange=(event)=>{\n        setPhone(event.target.value);\n    }\n    \n    const onSubmitClickHandler=(event)=>{     // submit activity\n        event.preventDefault();\n\n\n        console.log(name, email,phone);\n        axios.post(\"https://jsonplaceholder.typicode.com/users\", {name, email, phone, id:1,}).then((response)=>{\n            console.log(response);\n            alert(\"User Added\")\n            //fetch data\n            fetchData();\n            //reset input fields\n            setName(\"\");\n            setUserName(\"\");\n            setEmail(\"\");\n            setPhone(\"\");\n        })\n    }\n  \n\n    return(\n        <>\n        <h1>User List</h1>\n        <form onSubmit={onSubmitClickHandler}>\n            <label>Name</label>\n            <input name=\"name\" value={name} onChange={onNameChange}/>\n\n            <label>User Name</label>\n            <input name=\"UserName\" value={userName} onChange={onUserNameChange}/>\n\n            <label>Email</label>\n            <input name=\"email\" value={email} onChange={onEmailChange}/>\n\n            <label>phone</label>\n            <input name=\"phone\" value={phone} onChange={onPhoneChange}/>\n\n            <button type=\"submit\">Submit</button>\n        </form>\n        <br/>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>street</th>\n                    <th>city</th>\n                   \n                </tr>\n            </thead>\n            <tbody>\n                {userList.map((user, index)=>{       //mapping for fetched userList\n                    return(\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.address.street}</td>\n                    <td>{user.address.city}</td>\n                  \n                  </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </>\n\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserRead.js",["59"],"import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] =useState([]);\n\n    useEffect(()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){\n                setUserList(response.data)\n            }\n\n        })\n    },[])\n\n    return(\n        <>\n        <h1>User List</h1>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>street</th>\n                    <th>city</th>\n                    <th>zipcode</th>\n                    <th>website</th>\n                    <th>Company name</th>\n                </tr>\n            </thead>\n            <tbody>\n                {userList.map((user, index)=>{\n                    return(\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.address.street}</td>\n                    <td>{user.address.city}</td>\n                    <td>{user.address.zipcode}</td>\n                    <td>{user.website}</td>\n                    <td>{user.company.name}</td>\n                  </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </>\n\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserSample.js",["60","61"],"import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] = useState([]); \n\n    //const [name, setName] = useState(\"\"); \n\n    //const [userName, setUserName] = useState(\"\")\n\n  //  const [email, setEmail] = useState(\"\");  \n      \n    //const [phone, setPhone] = useState(\"\");  \n\n    const [id, setUserId] = useState(0);\n\n    const [isEditMode, setIsEditMode] = useState(false)\n\n    const [editObject, setEditObject] = useState({});\n\n    const [ userObject, setUserObject] = useState({});\n\n    const [selectedUserId, setSelectedUserId] = useState(-1);\n    useEffect(()=>{\n        fetchData();\n        \n    },[]);\n\n\n    const fetchData=()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){                          //method to fetch data from server\n                setUserList(response.data)\n            }\n\n        })\n    }\n\n   //-----------------------------\n\n    const onEditObjectHandler = (event) =>{\n        if (event) {\n            const { name, value } = event.target;\n            setEditObject({\n                ...editObject,\n                [name]: value,\n            });\n        }\n    };\n\n    const onUserChangeHandler = (event) =>{\n        if (event){\n            const { name, value } = event.target;\n            setUserObject({\n                ...userObject,\n                [name]: value,\n            });\n        }\n    }\n\n//-------------------------------\n\n    const onSubmitClickHandler=(event)=>{     // submit activity\n        event.preventDefault();\n        //console.log(name, email,phone);\n        if(!isEditMode){axios.post(\"https://jsonplaceholder.typicode.com/users\",{\n           ...userObject,\n             id:1,\n            })\n        .then((response)=>{\n            console.log(response);\n            alert(\"User Added\")\n\n            //fetch data again\n            fetchData();\n\n            //reset input fields\n            setUserObject({\n                name:\"\",\n                username:\"\",\n                email:\"\",\n                phone:\"\",\n            });\n        })\n    }\n    };\n\n    const onDeleteClickHandler=(id)=>{\n        axios.delete(\"https://jsonplaceholder.typicode.com/users/\" +id)\n        .then((response)=>{\n            alert(\"User Deleted\");\n            fetchData();\n        })\n    }\n    const onResetEditRow = (event) => {\n       setSelectedUserId(-1);\n       setEditObject({\n        name:\"\",\n        username:\"\",\n        email:\"\",\n        phone:\"\",\n       })\n        \n    }\n       \n    const onEditClickHandler = (userObject) =>{\n    console.log(userObject);\n    //setIsEditMode(true);\n    //setName(userObject.name);\n   //setUserName(userObject.username);\n   // setEmail(userObject.email);\n   // setPhone(userObject.phone);\n    //setUserId(userObject.id);\n    setEditObject({\n        ...userObject\n    });\n    setSelectedUserId(userObject.id);\n    setUserId(userObject.id);\n    };\n\n\n    const onResetClickHandler = (event) => {\n        if (event) {\n          event.preventDefault();\n        }\n        setIsEditMode(false);\n    \n        setUserObject({\n            name:\"\",\n            username:\"\",\n            email:\"\",\n            phone:\"\",\n        });\n      };\n\n      const onUpdateClickHandler = (event)=>{\n        if (selectedUserId > 0) {\n              axios\n                .put(\"https://jsonplaceholder.typicode.com/users/\" + selectedUserId, {\n                  id: selectedUserId,\n                ...editObject,\n                  userId: 1,\n                })\n                .then((response) => {\n                  if (response) {\n                    fetchData();\n                    alert(\"Updated...!\");\n                    onResetEditRow();\n                  }\n                });\n      }\n    }\n   \n    return(\n        <>\n        <h1>User List</h1>\n        <form onSubmit={onSubmitClickHandler}>\n\n            <label>Name</label>\n            <input name=\"name\" value={userObject.name}  onChange={onUserChangeHandler}/>\n\n            <label>UserName</label>\n            <input name=\"userName\" value={userObject.username} onChange={onUserChangeHandler}/>\n\n            <label>Email</label>\n            <input name=\"email\" value={userObject.email} onChange={onUserChangeHandler}/>\n\n            <label>phone</label>\n            <input name=\"phone\" value={userObject.phone} onChange={onUserChangeHandler}/>\n\n\n\n            <button type=\"submit\">{isEditMode ? \"update\" : \"Submit\"}</button>\n            {isEditMode && <button onClick={onResetClickHandler}>Reset</button>}\n        </form>\n        <br/>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                   \n                </tr>\n            </thead>\n            <tbody>\n\n{userList.map((user,index) =>{\nreturn(\n\n<tr key={user.id}>\n\n<td>{user.id}</td>\n\n<td>{selectedUserId===user.id ? (\n<input \nname=\"name\" \nvalue={editObject.name}\nonChange={onEditObjectHandler}/>\n):(\nuser.name)}</td>\n\n<td>{selectedUserId===user.id ? (\n<input \nname=\"userName\"\nvalue={editObject.username}\nonChange={onEditObjectHandler}/>\n):(\nuser.username)}\n</td>\n\n<td>{selectedUserId===user.id ? (\n<input\n name=\"email\" \n value={editObject.email}\nonChange={onEditObjectHandler}/>\n):(\nuser.email)}\n</td>\n\n<td>{selectedUserId===user.id ? (\n<input\n name=\"phone\" \n value={editObject.phone}\nonChange={onEditObjectHandler}/>\n):(\nuser.phone)}\n</td>\n\n<td>\n{selectedUserId===user.id ?\n(<>\n<button onClick={onUpdateClickHandler}>Update</button>\n<button onClick={onUpdateClickHandler}>Reset</button>\n</>\n)\n:(\n<>\n<button onClick={()=>\nonDeleteClickHandler(user.id)}>\nDelete\n</button>\n<button onClick={()=>{\nonEditClickHandler(user)\n}}>Edit:</button>\n\n</>\n)}\n</td>\n\n{/* <td>{user.address.city}</td>\n<td>{user.address.geo.lat}</td> */}\n{/* <button onClick={onDeleteHandler}>Delete:</button>\n<button onClick={()=>{\nonEdit(user)\n}}>Edit:</button> */}\n</tr>\n);\n})}\n</tbody>\n        </table>\n        </>\n\n    )\n}\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":19},{"ruleId":"66","severity":1,"message":"71","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":20},{"ruleId":"66","severity":1,"message":"73","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":18},{"ruleId":"66","severity":1,"message":"74","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":16},{"ruleId":"66","severity":1,"message":"75","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":4,"column":1,"nodeType":"78","endLine":290,"endColumn":3},{"ruleId":"66","severity":1,"message":"79","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":11,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":16,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":6,"column":1,"nodeType":"78","endLine":113,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":4,"column":1,"nodeType":"78","endLine":57,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":4,"column":1,"nodeType":"78","endLine":268,"endColumn":2},{"ruleId":"66","severity":1,"message":"80","line":15,"column":12,"nodeType":"68","messageId":"69","endLine":15,"endColumn":14},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'HooksSample' is defined but never used.","'PortalDemo' is defined but never used.","'ProfilerDemo' is defined but never used.","'UserCreate' is defined but never used.","'UserRead' is defined but never used.","'UserDelete' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'reactDom' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]