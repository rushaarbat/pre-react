[{"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/index.js":"1","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/App.js":"2","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/reportWebVitals.js":"3","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/HooksSample.js":"4","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/PortalDemo.js":"5","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/ProfilerDemo.js":"6","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserCreate.js":"7","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserRead.js":"8"},{"size":500,"mtime":1639018634316,"results":"9","hashOfConfig":"10"},{"size":537,"mtime":1639051449522,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1639018634320,"results":"12","hashOfConfig":"10"},{"size":1923,"mtime":1639022941237,"results":"13","hashOfConfig":"10"},{"size":203,"mtime":1639026485568,"results":"14","hashOfConfig":"10"},{"size":433,"mtime":1639050583608,"results":"15","hashOfConfig":"10"},{"size":3216,"mtime":1639051366238,"results":"16","hashOfConfig":"10"},{"size":1651,"mtime":1639050157113,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1iogovt",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/index.js",[],["39","40"],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/App.js",["41","42","43","44","45"],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/reportWebVitals.js",[],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/HooksSample.js",["46","47"],"import axios from \"axios\";  \nimport { useEffect, useState } from \"react\";  \n\nexport default () => {\n    const [postList, setPostlist] = useState([]);\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n\n\n    useEffect (() =>{\n    fetchData();\n    },[]);\n\n\n    const fetchData = () =>{\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) =>{\n    console.log(response.data)\n    if (response && response.data) {\n    setPostlist(response.data);\n    };\n    })\n    }\n    const onTitleChange = (event) =>{\n        setTitle(event.target.value);\n    };\n\n    const onBodyChange = (event) =>{\n        setBody(event.target.value);\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        console.log(title, body);\n        axios.\n        post(\"https://jsonplaceholder.typicode.com/posts\",{\n            title,\n            body,\n            userId: 1,\n        }).then((response)=>{\n            console.log(response);\n            alert(\"Added\");\n            //fetch the data again\n            fetchData();\n            //reset form\n            setTitle(\"\");\n            setBody(\"\");\n        });\n    };\n    \n    return (\n    <>\n    <h1> From HookSample </h1>\n    <h2> Post Form</h2>\n    <form onSubmit={onFormSubmit}>\n        <label> Titl</label>\n        <input name=\"title\" value={title} onChange={onTitleChange}></input>\n\n        <label> Body</label>\n        <input name=\"body\" value={body} onChange={onBodyChange}></input>\n\n        <button onClick={onFormSubmit}>Submit</button>\n\n    </form>\n    <table>\n    <thead>\n    <tr>\n    <th> Id </th>\n    <th> Title </th>\n    <th>Body</th>\n    </tr>\n    </thead>\n    <tbody>\n    {postList.map((post, index) =>{\n    return(\n    <tr key={post.id}>\n    <td> {post.id}</td>\n    <td>{post.title}</td>\n    <td>{post.body}</td>\n    </tr>\n    )\n    })}\n    </tbody>\n    \n    </table>\n    </>\n    )\n    \n    \n    }","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/PortalDemo.js",["48","49"],"import reactDom from \"react-dom\";       \n\nexport default () => {\n    //return <h1>In PortalDemo</h1>\n    return(<>\n    <h1> In Portal Demo</h1>\n\n    document.getElementById(\"root-portal\")\n    </>\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/ProfilerDemo.js",["50"],"/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserCreate.js",["51"],"\n  \nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] = useState([]); \n    const [name, setName] = useState(\"\");        \n    const [userName, setUserName] = useState(\"\")\n    const [email, setEmail] = useState(\"\");       \n    const [phone, setPhone] = useState(\"\");       \n\n    useEffect(()=>{\n        fetchData();\n        \n    },[]);\n    const fetchData=()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){                          //method to fetch data from server\n                setUserList(response.data)\n            }\n\n        })\n    }\n\n    const onNameChange=(event)=>{\n        setName(event.target.value);\n    }\n\n    const onUserNameChange=(event)=>{\n        setUserName(event.target.value);\n    }\n\n    const onEmailChange=(event)=>{\n        setEmail(event.target.value);\n    }\n    const onPhoneChange=(event)=>{\n        setPhone(event.target.value);\n    }\n    \n    const onSubmitClickHandler=(event)=>{     // submit activity\n        event.preventDefault();\n\n\n        console.log(name, email,phone);\n        axios.post(\"https://jsonplaceholder.typicode.com/users\", {name, email, phone, id:1,}).then((response)=>{\n            console.log(response);\n            alert(\"User Added\")\n            //fetch data\n            fetchData();\n            //reset input fields\n            setName(\"\");\n            setUserName(\"\");\n            setEmail(\"\");\n            setPhone(\"\");\n        })\n    }\n  \n\n    return(\n        <>\n        <h1>User List</h1>\n        <form onSubmit={onSubmitClickHandler}>\n            <label>Name</label>\n            <input name=\"name\" value={name} onChange={onNameChange}/>\n\n            <label>User Name</label>\n            <input name=\"UserName\" value={userName} onChange={onUserNameChange}/>\n\n            <label>Email</label>\n            <input name=\"email\" value={email} onChange={onEmailChange}/>\n\n            <label>phone</label>\n            <input name=\"phone\" value={phone} onChange={onPhoneChange}/>\n\n            <button type=\"submit\">Submit</button>\n        </form>\n        <br/>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>street</th>\n                    <th>city</th>\n                   \n                </tr>\n            </thead>\n            <tbody>\n                {userList.map((user, index)=>{       //mapping for fetched userList\n                    return(\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.address.street}</td>\n                    <td>{user.address.city}</td>\n                  \n                  </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </>\n\n    )\n}","/home/rushabh/Desktop/rushabh_arbat_assignment/rushabh_arbat_assignment/VS-Code/seventh-app/src/UserRead.js",["52"],"import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\n\nexport default ()=>{\n    const [userList, setUserList] =useState([]);\n\n    useEffect(()=>{\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\n            console.log(response);\n            if(response && response.data){\n                setUserList(response.data)\n            }\n\n        })\n    },[])\n\n    return(\n        <>\n        <h1>User List</h1>\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>UserName</th>\n                    <th>Email</th>\n                    <th>Phone</th>\n                    <th>street</th>\n                    <th>city</th>\n                    <th>zipcode</th>\n                    <th>website</th>\n                    <th>Company name</th>\n                </tr>\n            </thead>\n            <tbody>\n                {userList.map((user, index)=>{\n                    return(\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.address.street}</td>\n                    <td>{user.address.city}</td>\n                    <td>{user.address.zipcode}</td>\n                    <td>{user.website}</td>\n                    <td>{user.company.name}</td>\n                  </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n        </>\n\n    )\n}",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":19},{"ruleId":"57","severity":1,"message":"62","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":18},{"ruleId":"57","severity":1,"message":"63","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":20},{"ruleId":"57","severity":1,"message":"64","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":4,"column":1,"nodeType":"67","endLine":89,"endColumn":6},{"ruleId":"68","severity":1,"message":"69","line":34,"column":14,"nodeType":"70","messageId":"71","endLine":34,"endColumn":15,"fix":"72"},{"ruleId":"57","severity":1,"message":"73","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":11,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":16,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":6,"column":1,"nodeType":"67","endLine":113,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":4,"column":1,"nodeType":"67","endLine":57,"endColumn":2},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'HooksSample' is defined but never used.","'PortalDemo' is defined but never used.","'ProfilerDemo' is defined but never used.","'UserRead' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"76","text":"77"},"'reactDom' is defined but never used.","no-global-assign","no-unsafe-negation",[806,816],"\n        ."]